# Steps template to use a plan to provision resources in a specific environment
parameters:
  environmentId: '' # Name of the environment in Azure. example qa, uat, production
  terraformStateServicePrincipal: '' # Service principal for subscription to store terraform in
  environmentServiceConnector: '' # Service principal for subscription to provision resources in
  terraformResourceGroup: ''
  terraformStorageAccount: ''

steps:
  - checkout: none

  - task: DownloadPipelineArtifact@2
    displayName: 'Download Terraform Plan'
    inputs:
      artifactName: 'terraform'
      targetPath: '$(Build.SourcesDirectory)/apply'

  - task: TerraformInstaller@1
    displayName: Install Terraform

  - task: TerraformTaskV4@4
    displayName: Initialize Terraform
    name: TerraformInit
    inputs:
      provider: 'azurerm'
      command: 'init'
      workingDirectory: $(Build.SourcesDirectory)/apply
      backendServiceArm: ${{parameters.terraformStateServicePrincipal}}
      backendAzureRmResourceGroupName: ${{parameters.terraformResourceGroup}}
      backendAzureRmStorageAccountName: ${{parameters.terraformStorageAccount}}
      backendAzureRmContainerName: $(ResourceName)-${{ parameters.environmentId }}
      backendAzureRmKey: $(ResourceName)-${{ parameters.environmentId }}.tfstate

  - task: TerraformTaskV4@4
    displayName: Apply Terraform Plan            
    inputs:
      provider: 'azurerm'
      command: 'apply'
      commandOptions: 'main.tfplan'
      workingDirectory: $(Build.SourcesDirectory)/apply
      environmentServiceNameAzureRM: ${{ parameters.environmentServiceConnector }}