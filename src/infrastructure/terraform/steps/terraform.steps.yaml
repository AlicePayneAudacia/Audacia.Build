parameters:
  - name: terraformDirectory
    default: $(System.DefaultWorkingDirectory)
  - name: terraformVersion # Version of terraform to install
    default: ''
  - name: environmentId # Name of the environment in Azure. example qa, uat, production
    default: ''
  - name: backendSubscription # Subscription to store backend in
    default: ''
  - name: backendResourceGroup # Resource Group to store backend in
    default: ''
  - name: backendStorageAccount # Storage Account to store backend in
    default: ''
  - name: backendStatePrefix # Prefix used in the tfstate file name, e.g 'audacia' will become 'audacia-qa.tfstate'
    default: ''
  - name: environmentSubscription # Subscription to provision resources in
    default: ''
  - name: terraformInputVariables # Object array of variables to set for Terraform; objects should have 'variableName' and 'variableValue' properties
    type: object
    default: []

steps:
  - template: ../tasks/get-resource-name.yaml
    parameters:
      terraformDirectory: ${{ parameters.terraformDirectory }}

  - ${{ each variable in parameters.terraformInputVariables }}:
    - template: ../tasks/set-variable.yaml
      parameters:
        terraformDirectory: ${{ parameters.terraformDirectory }}
        variableName: ${{ variable.variableName }}
        variableValue: ${{ variable.variableValue }}

  - template: ../tasks/create-storage.yaml
    parameters:
      storageContainerName: $(ResourceName)-${{ parameters.environmentId }}
      subscription: ${{ parameters.backendSubscription }}
      backendStorageAccount: ${{ parameters.backendStorageAccount }}

  - task: TerraformInstaller@1
    displayName: Terraform Install
    inputs:
      terraformVersion: ${{parameters.terraformVersion}}

  - task: TerraformTaskV4@4
    displayName: Terraform Init
    name: TerraformInit
    inputs:
      provider: 'azurerm'
      command: 'init'
      workingDirectory: ${{parameters.terraformDirectory}}
      backendServiceArm: ${{parameters.backendSubscription}}
      backendAzureRmResourceGroupName: ${{parameters.backendResourceGroup}}
      backendAzureRmStorageAccountName: ${{parameters.backendStorageAccount}}
      backendAzureRmContainerName: $(ResourceName)-${{parameters.environmentId}}
      backendAzureRmKey: $(ResourceName)-${{parameters.environmentId}}.tfstate
    env:
      ARM_USE_AZUREAD: true

  - task: TerraformTaskV4@4
    displayName: Terraform Apply
    name: TerraformApply
    inputs:
      provider: 'azurerm'
      command: 'apply'
      workingDirectory: ${{parameters.terraformDirectory}}
      environmentServiceNameAzureRM: ${{parameters.environmentSubscription}}

  - template: /src/infrastructure/terraform/tasks/expand-variables.yaml
