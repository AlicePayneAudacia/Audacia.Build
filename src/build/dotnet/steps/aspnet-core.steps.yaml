parameters:
  projects: '**/*.csproj'
  tests: '**/*.Tests.csproj'
  shouldRunTests: true
  applyVersioning: true

steps:

  - ${{ if eq(parameters.applyVersioning, true) }}:
      task: UpdateDotNetVersions@12
      displayName: .NET Versioning
      inputs:
        releaseBranchNames: 'master,main'
        ExcludePreReleasePostfix: false
        workingDirectory: ''
        includeCsproj: true
        includeNuspec: false
        packageSource: 'internalPublic'
        excludePaths: '*.Tests.csproj'
      env:
        SYSTEM_ACCESSTOKEN: $(System.AccessToken)

  - task: DotNetCoreCLI@2
    displayName: '.NET Restore'
    inputs:
      command: restore
      projects: '${{parameters.projects}}'
      vstsFeed: 'Audacia.Public/AudaciaPublic'

  - task: DotNetCoreCLI@2
    displayName: '.NET Build'
    inputs:
      command: build
      projects: ${{ parameters.projects}}
      publishWebProjects: false
      arguments: >
        --configuration Release
        --no-restore

  - task: DotNetCoreCLI@2
    displayName: '.NET Test'
    condition: and(succeeded(), eq('${{ parameters.shouldRunTests }}', true))
    inputs:
      command: test
      projects: ${{ parameters.projects }}
      arguments: '--collect "Code coverage"'
      configuration: 'Release'

  - task: DotNetCoreCLI@2
    displayName: '.NET Publish'
    inputs:
      command: publish
      publishWebProjects: false
      projects: ${{parameters.projects}}
      arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory) --no-restore --no-build'
      zipAfterPublish: false
      modifyOutputPath: true

  - template: /src/build/common/tasks/publish.yaml
    parameters:
      path: ''
      artifactName: '$(Build.DefinitionName)'